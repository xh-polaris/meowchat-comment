// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"github.com/xh-polaris/platform-comment/biz/adaptor"
	"github.com/xh-polaris/platform-comment/biz/application/service"
	"github.com/xh-polaris/platform-comment/biz/infrastructure/config"
	"github.com/xh-polaris/platform-comment/biz/infrastructure/mapper"
	"github.com/xh-polaris/platform-comment/biz/infrastructure/mq"
	"github.com/xh-polaris/platform-comment/biz/infrastructure/stores/redis"
)

// Injectors from wire.go:

func NewCommentServerImpl() (*adaptor.CommentServerImpl, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	producer, err := mq.NewMqProducer(configConfig)
	if err != nil {
		return nil, err
	}
	commentModel := mapper.NewCommentModel(configConfig)
	historyModel := mapper.NewHistoryModel(configConfig)
	redisRedis := redis.NewRedis(configConfig)
	commentService := &service.CommentService{
		Config:       configConfig,
		MqProducer:   producer,
		CommentModel: commentModel,
		HistoryModel: historyModel,
		Redis:        redisRedis,
	}
	commentServerImpl := &adaptor.CommentServerImpl{
		Config:         configConfig,
		CommentService: commentService,
	}
	return commentServerImpl, nil
}
